{"ast":null,"code":"var _jsxFileName = \"/Users/chantelngoh/CSE316/Playlister_HW3/client/src/components/EditSongModal.js\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from 'react';\nimport { GlobalStoreContext } from '../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditSongModal() {\n  _s();\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const [editActive, setEditActive] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [artist, setArtist] = useState(\"\");\n  const [youtubeId, setYouTubeId] = useState(\"\");\n  function handleConfirmEditSong(event) {\n    let newSongData = {\n      title: title,\n      artist: artist,\n      youtubeId: youtubeId\n    };\n    store.addUpdateSongTrans(store.songMarkedForEditIndex, newSongData);\n  }\n  function handleCancelEditSong(event) {\n    store.hideEditSongModal();\n  }\n  function handleUpdateTitle(event) {\n    setTitle(event.target.value);\n  }\n  function handleUpdateArtist(event) {\n    setArtist(event.target.value);\n  }\n  function handleUpdateYouTubeId(event) {\n    setYouTubeId(event.target.value);\n  }\n\n  // render() {\n  //     const { isOpenCallback } = this.props;\n  //     let modalClass = \"modal\";\n  //     if (isOpenCallback()) {\n  //         modalClass += \" is-visible\";\n  //     }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"edit-song-modal\",\n    className: \"modal\",\n    \"data-animation\": \"slideInOutLeft\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"edit-song-root\",\n      className: \"modal-dialog\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"edit-song-modal-header\",\n        className: \"modal-north\",\n        children: \"Edit Song\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"edit-song-modal-content\",\n        className: \"modal-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"title-prompt\",\n          className: \"modal-prompt\",\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"edit-song-modal-title-textfield\",\n          className: \"modal-textfield\",\n          type: \"text\",\n          defaultValue: this.store.songMarkedForEditTitle,\n          onChange: handleUpdateTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"artist-prompt\",\n          className: \"modal-prompt\",\n          children: \"Artist:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"edit-song-modal-artist-textfield\",\n          className: \"modal-textfield\",\n          type: \"text\",\n          onChange: handleUpdateArtist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"you-tube-id-prompt\",\n          className: \"modal-prompt\",\n          children: \"You Tube Id:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"edit-song-modal-youTubeId-textfield\",\n          className: \"modal-textfield\",\n          type: \"text\",\n          onChange: handleUpdateYouTubeId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-south\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          id: \"edit-song-confirm-button\",\n          className: \"modal-button\",\n          value: \"Confirm\",\n          onClick: handleConfirmEditSong\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          id: \"edit-song-cancel-button\",\n          className: \"modal-button\",\n          value: \"Cancel\",\n          onClick: handleCancelEditSong\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 13\n  }, this);\n}\n// }\n_s(EditSongModal, \"VPr5TfjUTx0I3dsKEbDPk2QaLkQ=\");\n_c = EditSongModal;\nexport default EditSongModal;\nvar _c;\n$RefreshReg$(_c, \"EditSongModal\");","map":{"version":3,"names":["useContext","useState","GlobalStoreContext","EditSongModal","store","editActive","setEditActive","title","setTitle","artist","setArtist","youtubeId","setYouTubeId","handleConfirmEditSong","event","newSongData","addUpdateSongTrans","songMarkedForEditIndex","handleCancelEditSong","hideEditSongModal","handleUpdateTitle","target","value","handleUpdateArtist","handleUpdateYouTubeId","songMarkedForEditTitle"],"sources":["/Users/chantelngoh/CSE316/Playlister_HW3/client/src/components/EditSongModal.js"],"sourcesContent":["import { useContext, useState } from 'react'\nimport { GlobalStoreContext } from '../store'\n\nfunction EditSongModal() {\n    const { store } = useContext(GlobalStoreContext);\n    const [ editActive, setEditActive ] = useState(false);\n    const [ title, setTitle ] = useState(\"\");        \n    const [ artist, setArtist ] = useState(\"\");        \n    const [ youtubeId, setYouTubeId ] = useState(\"\");   \n\n    function handleConfirmEditSong(event) {\n        let newSongData = {\n            title: title,\n            artist: artist,\n            youtubeId: youtubeId\n        }\n        store.addUpdateSongTrans(store.songMarkedForEditIndex, newSongData);\n    }\n\n    function handleCancelEditSong(event) {\n        store.hideEditSongModal();\n    }\n\n    function handleUpdateTitle(event) {\n        setTitle(event.target.value);\n    }\n\n    function handleUpdateArtist(event) {\n        setArtist(event.target.value);\n    }\n\n    function handleUpdateYouTubeId(event) {\n        setYouTubeId(event.target.value);\n    }\n\n    // render() {\n    //     const { isOpenCallback } = this.props;\n    //     let modalClass = \"modal\";\n    //     if (isOpenCallback()) {\n    //         modalClass += \" is-visible\";\n    //     }\n        return (\n            <div\n                id=\"edit-song-modal\"\n                className=\"modal\"\n                data-animation=\"slideInOutLeft\">\n                <div\n                    id='edit-song-root'\n                    className=\"modal-dialog\">\n                    <div\n                        id=\"edit-song-modal-header\"\n                        className=\"modal-north\">Edit Song</div>\n                    <div\n                        id=\"edit-song-modal-content\"\n                        className=\"modal-center\">\n                        <div id=\"title-prompt\" className=\"modal-prompt\">Title:</div>\n                        <input id=\"edit-song-modal-title-textfield\" className='modal-textfield' type=\"text\" defaultValue={this.store.songMarkedForEditTitle} onChange={handleUpdateTitle} />\n                        <div id=\"artist-prompt\" className=\"modal-prompt\">Artist:</div>\n                        <input id=\"edit-song-modal-artist-textfield\" className='modal-textfield' type=\"text\" onChange={handleUpdateArtist} />\n                        <div id=\"you-tube-id-prompt\" className=\"modal-prompt\">You Tube Id:</div>\n                        <input id=\"edit-song-modal-youTubeId-textfield\" className='modal-textfield' type=\"text\" onChange={handleUpdateYouTubeId} />\n                    </div>\n                    <div className=\"modal-south\">\n                        <input type=\"button\" id=\"edit-song-confirm-button\" className=\"modal-button\" value='Confirm' onClick={handleConfirmEditSong} />\n                        <input type=\"button\" id=\"edit-song-cancel-button\" className=\"modal-button\" value='Cancel' onClick={handleCancelEditSong} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n// }\n\nexport default EditSongModal;"],"mappings":"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"},"metadata":{},"sourceType":"module"}