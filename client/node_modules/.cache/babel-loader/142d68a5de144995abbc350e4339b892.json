{"ast":null,"code":"var _jsxFileName = \"/Users/chantelngoh/CSE316/Playlister_HW3/client/src/components/EditSongModal.js\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from 'react';\nimport { GlobalStoreContext } from '../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditSongModal() {\n  _s();\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const [editActive, setEditActive] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [artist, setArtist] = useState(\"\");\n  const [youtubeId, setYouTubeId] = useState(\"\");\n\n  // handleConfirmEditSong = () => {\n  //     let newSongData = {\n  //         title: this.state.title,\n  //         artist: this.state.artist,\n  //         youTubeId: this.state.youTubeId\n  //     };\n  //     this.store.addUpdateSongTrans(this.props.songIndex, newSongData);\n  // }\n\n  // handleCancelEditSongModal = () => {\n  //     this.props.hideModalCallback();\n  // }\n\n  // // function handleUpdateTitle(event) {\n\n  // // }\n  // handleUpdateTitle = (event) => {\n  //     this.setState(\n  //         { title: event.target.value }\n  //     );\n  // }\n\n  // handleUpdateArtist = (event) => {\n  //     this.setState(\n  //         { artist: event.target.value }\n  //     );\n  // }\n\n  // handleUpdateYouTubeId = (event) => {\n  //     this.setState(\n  //         { youTubeId: event.target.value }\n  //     );\n  // }\n\n  // render() {\n  //     const { isOpenCallback } = this.props;\n  //     let modalClass = \"modal\";\n  //     if (isOpenCallback()) {\n  //         modalClass += \" is-visible\";\n  //     }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"edit-song-modal\",\n    className: \"modal\",\n    \"data-animation\": \"slideInOutLeft\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"edit-song-root\",\n      className: \"modal-dialog\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"edit-song-modal-header\",\n        className: \"modal-north\",\n        children: \"Edit Song\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 13\n  }, this);\n}\n// }\n_s(EditSongModal, \"VPr5TfjUTx0I3dsKEbDPk2QaLkQ=\");\n_c = EditSongModal;\nexport default EditSongModal;\nvar _c;\n$RefreshReg$(_c, \"EditSongModal\");","map":{"version":3,"names":["useContext","useState","GlobalStoreContext","EditSongModal","store","editActive","setEditActive","title","setTitle","artist","setArtist","youtubeId","setYouTubeId"],"sources":["/Users/chantelngoh/CSE316/Playlister_HW3/client/src/components/EditSongModal.js"],"sourcesContent":["import { useContext, useState } from 'react'\nimport { GlobalStoreContext } from '../store'\n\nfunction EditSongModal() {\n    const { store } = useContext(GlobalStoreContext);\n    const [ editActive, setEditActive ] = useState(false);\n    const [ title, setTitle ] = useState(\"\");        \n    const [ artist, setArtist ] = useState(\"\");        \n    const [ youtubeId, setYouTubeId ] = useState(\"\");        \n\n    // handleConfirmEditSong = () => {\n    //     let newSongData = {\n    //         title: this.state.title,\n    //         artist: this.state.artist,\n    //         youTubeId: this.state.youTubeId\n    //     };\n    //     this.store.addUpdateSongTrans(this.props.songIndex, newSongData);\n    // }\n\n    // handleCancelEditSongModal = () => {\n    //     this.props.hideModalCallback();\n    // }\n\n    // // function handleUpdateTitle(event) {\n\n    // // }\n    // handleUpdateTitle = (event) => {\n    //     this.setState(\n    //         { title: event.target.value }\n    //     );\n    // }\n\n    // handleUpdateArtist = (event) => {\n    //     this.setState(\n    //         { artist: event.target.value }\n    //     );\n    // }\n\n    // handleUpdateYouTubeId = (event) => {\n    //     this.setState(\n    //         { youTubeId: event.target.value }\n    //     );\n    // }\n\n    // render() {\n    //     const { isOpenCallback } = this.props;\n    //     let modalClass = \"modal\";\n    //     if (isOpenCallback()) {\n    //         modalClass += \" is-visible\";\n    //     }\n        return (\n            <div\n                id=\"edit-song-modal\"\n                className=\"modal\"\n                data-animation=\"slideInOutLeft\">\n                <div\n                    id='edit-song-root'\n                    className=\"modal-dialog\">\n                    <div\n                        id=\"edit-song-modal-header\"\n                        className=\"modal-north\">Edit Song</div>\n                    {/* <div\n                        id=\"edit-song-modal-content\"\n                        className=\"modal-center\">\n                        <div id=\"title-prompt\" className=\"modal-prompt\">Title:</div>\n                        <input id=\"edit-song-modal-title-textfield\" className='modal-textfield' type=\"text\" defaultValue={this.props.songToEdit.title} onChange={this.handleUpdateTitle} />\n                        <div id=\"artist-prompt\" className=\"modal-prompt\">Artist:</div>\n                        <input id=\"edit-song-modal-artist-textfield\" className='modal-textfield' type=\"text\" defaultValue={this.state.artist} onChange={this.handleUpdateArtist} />\n                        <div id=\"you-tube-id-prompt\" className=\"modal-prompt\">You Tube Id:</div>\n                        <input id=\"edit-song-modal-youTubeId-textfield\" className='modal-textfield' type=\"text\" defaultValue={this.state.youTubeId} onChange={this.handleUpdateYouTubeId} />\n                    </div>\n                    <div className=\"modal-south\">\n                        <input type=\"button\" id=\"edit-song-confirm-button\" className=\"modal-button\" value='Confirm' onClick={this.handleConfirmEditSong} />\n                        <input type=\"button\" id=\"edit-song-cancel-button\" className=\"modal-button\" value='Cancel' onClick={this.handleCancelEditSongModal} />\n                    </div> */}\n                </div>\n            </div>\n        );\n    }\n// }\n\nexport default EditSongModal;"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC5C,SAASC,kBAAkB,QAAQ,UAAU;AAAA;AAE7C,SAASC,aAAa,GAAG;EAAA;EACrB,MAAM;IAAEC;EAAM,CAAC,GAAGJ,UAAU,CAACE,kBAAkB,CAAC;EAChD,MAAM,CAAEG,UAAU,EAAEC,aAAa,CAAE,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAEM,KAAK,EAAEC,QAAQ,CAAE,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAEQ,MAAM,EAAEC,SAAS,CAAE,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAEU,SAAS,EAAEC,YAAY,CAAE,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACI,oBACI;IACI,EAAE,EAAC,iBAAiB;IACpB,SAAS,EAAC,OAAO;IACjB,kBAAe,gBAAgB;IAAA,uBAC/B;MACI,EAAE,EAAC,gBAAgB;MACnB,SAAS,EAAC,cAAc;MAAA,uBACxB;QACI,EAAE,EAAC,wBAAwB;QAC3B,SAAS,EAAC,aAAa;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAgB;MAAA;MAAA;MAAA;IAAA;EAezC;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AACJ;AAAA,GA5ESE,aAAa;AAAA,KAAbA,aAAa;AA8EtB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module"}